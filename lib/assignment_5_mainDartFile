import 'package:flutter/material.dart';

void main() {
  runApp(const FeedbackApp());
}

class FeedbackApp extends StatelessWidget {
  const FeedbackApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Feedback Form',
      debugShowCheckedModeBanner: false,
      home: const FeedbackForm(),
    );
  }
}

class FeedbackForm extends StatefulWidget {
  const FeedbackForm({super.key});

  @override
  State<FeedbackForm> createState() => _FeedbackFormState();
}

class _FeedbackFormState extends State<FeedbackForm> {
  final _nameController = TextEditingController();
  final _rollController = TextEditingController();
  final _feedbackController = TextEditingController();

  double _rating = 5;
  String? _selectedCategory;

  final List<String> _categories = ['Bug Report', 'Suggestion', 'Other'];
  final Map<String, bool> _features = {
    'Easy to Use': false,
    'Design': false,
    'Speed': false,
    'Support': false,
  };
  bool _agreedToTerms = false;

  void _submitForm() {
    if (!_agreedToTerms) {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Please agree to the terms and conditions')),
      );
      return;
    }

    print('--- Feedback Submitted ---');
    print('Name: ${_nameController.text}');
    print('Roll Number: ${_rollController.text}');
    print('Feedback: ${_feedbackController.text}');
    print('Rating: $_rating');
    print('Category: $_selectedCategory');
    print('Features Liked: ${_features.entries.where((e) => e.value).map((e) => e.key).join(", ")}');
    print('Agreed to Terms: $_agreedToTerms');

    ScaffoldMessenger.of(context).showSnackBar(
      const SnackBar(content: Text('Feedback submitted successfully!')),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("Flutter Feedback Form"),
        centerTitle: true,
        leading: const Icon(Icons.arrow_back),
        backgroundColor: Colors.white,
        foregroundColor: Colors.black,
        elevation: 0.5,
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const Text("Name"),
            const SizedBox(height: 6),
            TextField(
              controller: _nameController,
              decoration: _inputDecoration("Enter your name"),
            ),
            const SizedBox(height: 16),

            const Text("Roll Number"),
            const SizedBox(height: 6),
            TextField(
              controller: _rollController,
              decoration: _inputDecoration("Enter your roll number"),
            ),
            const SizedBox(height: 16),

            const Text("Enter your feedback..."),
            const SizedBox(height: 6),
            TextField(
              controller: _feedbackController,
              maxLines: 4,
              decoration: _inputDecoration(""),
            ),
            const SizedBox(height: 16),

            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                const Text("Rate your experience"),
                Text(_rating.toInt().toString()),
              ],
            ),
            Slider(
              min: 1,
              max: 10,
              value: _rating,
              divisions: 9,
              onChanged: (value) {
                setState(() {
                  _rating = value;
                });
              },
            ),
            const SizedBox(height: 10),

            const Text("Select a category"),
            const SizedBox(height: 6),
            DropdownButtonFormField<String>(
              value: _selectedCategory,
              items: _categories
                  .map((cat) => DropdownMenuItem(
                value: cat,
                child: Text(cat),
              ))
                  .toList(),
              onChanged: (value) {
                setState(() {
                  _selectedCategory = value;
                });
              },
              decoration: _inputDecoration("Choose a category"),
            ),
            const SizedBox(height: 20),

            const Text("What features did you like?",
                style: TextStyle(fontWeight: FontWeight.bold)),
            const SizedBox(height: 10),
            ..._features.entries.map((entry) => CheckboxListTile(
              title: Text(entry.key),
              value: entry.value,
              onChanged: (val) {
                setState(() {
                  _features[entry.key] = val!;
                });
              },
            )),
            CheckboxListTile(
              title: const Text("I agree to the terms and conditions"),
              value: _agreedToTerms,
              onChanged: (val) {
                setState(() {
                  _agreedToTerms = val!;
                });
              },
            ),
            const SizedBox(height: 16),
            SizedBox(
              width: double.infinity,
              height: 45,
              child: ElevatedButton(
                style: ElevatedButton.styleFrom(
                  backgroundColor: const Color(0xFF007AFF),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                ),
                onPressed: _submitForm,
                child: const Text("Submit", style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold, fontSize: 18),),
              ),
            )
          ],
        ),
      ),
    );
  }

  InputDecoration _inputDecoration(String hint) {
    return InputDecoration(
      hintText: hint,
      filled: true,
      fillColor: const Color(0xFFF1F5F9),
      contentPadding: const EdgeInsets.symmetric(horizontal: 12, vertical: 14),
      border: OutlineInputBorder(
        borderRadius: BorderRadius.circular(10),
        borderSide: BorderSide.none,
      ),
    );
  }
}
